using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Player
{
    static void Main(string[] args)
    {
        string[] inputs;
        inputs = Console.ReadLine().Split(' ');
        int W = int.Parse(inputs[0]); // width of the building.
        int H = int.Parse(inputs[1]); // height of the building.
        int N = int.Parse(Console.ReadLine()); // maximum number of turns before game over.
        inputs = Console.ReadLine().Split(' ');
        int X0 = int.Parse(inputs[0]);
        int Y0 = int.Parse(inputs[1]);
        int w = 0, h = 0;//Lower bounds
        W--;
        H--;

        // game loop
        while (true)
        {
            string BOMB_DIR = Console.ReadLine(); // the direction of the bombs from batman's current location (U, UR, R, DR, D, DL, L or UL)

            // Write an action using Console.WriteLine()
            // To debug: Console.Error.WriteLine("Debug messages...");

            foreach(char chr in BOMB_DIR){
                if(chr=='U'){
                    H = Y0-1;
                    Y0 = (int)Math.Floor(((float)H-(float)h)/2)+h;
                }
                else if(chr=='D'){
                    h = Y0+1;
                    Y0 = (int)Math.Ceiling(((float)H-(float)h)/2)+h;
                }
                else if(chr=='L'){
                    W = X0-1;
                    X0 = (int)Math.Floor(((float)W-(float)w)/2)+w;
                }
                else if(chr=='R' ){
                    w = X0+1;
                    X0 = (int)Math.Ceiling(((float)W-(float)w)/2)+w;
                }
            }
            Console.Error.WriteLine(w+"..."+W);
            Console.Error.WriteLine(" "+X0+" "+Y0);
            Console.Error.WriteLine(h+"..."+H);
            Console.WriteLine(X0+" "+Y0); // the location of the next window Batman should jump to.
            
        }
    }
}
